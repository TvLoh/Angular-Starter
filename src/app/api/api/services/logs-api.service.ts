/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiV1LogsAnalyseLogsRetrieve } from '../fn/logs/api-v-1-logs-analyse-logs-retrieve';
import { ApiV1LogsAnalyseLogsRetrieve$Params } from '../fn/logs/api-v-1-logs-analyse-logs-retrieve';
import { apiV1LogsDownloadRetrieve } from '../fn/logs/api-v-1-logs-download-retrieve';
import { ApiV1LogsDownloadRetrieve$Params } from '../fn/logs/api-v-1-logs-download-retrieve';
import { apiV1LogsRetrieve } from '../fn/logs/api-v-1-logs-retrieve';
import { ApiV1LogsRetrieve$Params } from '../fn/logs/api-v-1-logs-retrieve';


/**
 * Testrun logs endpoints
 */
@Injectable({ providedIn: 'root' })
export class LogsApiService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiV1LogsRetrieve()` */
  static readonly ApiV1LogsRetrievePath = '/api/v1/logs/{testrun_id}';

  /**
   * API endpoint to retrieve logs for a specific test run.
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiV1LogsRetrieve()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1LogsRetrieve$Response(params: ApiV1LogsRetrieve$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return apiV1LogsRetrieve(this.http, this.rootUrl, params, context);
  }

  /**
   * API endpoint to retrieve logs for a specific test run.
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiV1LogsRetrieve$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1LogsRetrieve(params: ApiV1LogsRetrieve$Params, context?: HttpContext): Observable<void> {
    return this.apiV1LogsRetrieve$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

  /** Path part for operation `apiV1LogsAnalyseLogsRetrieve()` */
  static readonly ApiV1LogsAnalyseLogsRetrievePath = '/api/v1/logs/analyse_logs/{testrun_id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiV1LogsAnalyseLogsRetrieve()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1LogsAnalyseLogsRetrieve$Response(params: ApiV1LogsAnalyseLogsRetrieve$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return apiV1LogsAnalyseLogsRetrieve(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiV1LogsAnalyseLogsRetrieve$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1LogsAnalyseLogsRetrieve(params: ApiV1LogsAnalyseLogsRetrieve$Params, context?: HttpContext): Observable<void> {
    return this.apiV1LogsAnalyseLogsRetrieve$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

  /** Path part for operation `apiV1LogsDownloadRetrieve()` */
  static readonly ApiV1LogsDownloadRetrievePath = '/api/v1/logs/download/{testrun_id}';

  /**
   * API endpoint to download logs for a specific test run.
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiV1LogsDownloadRetrieve()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1LogsDownloadRetrieve$Response(params: ApiV1LogsDownloadRetrieve$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return apiV1LogsDownloadRetrieve(this.http, this.rootUrl, params, context);
  }

  /**
   * API endpoint to download logs for a specific test run.
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiV1LogsDownloadRetrieve$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1LogsDownloadRetrieve(params: ApiV1LogsDownloadRetrieve$Params, context?: HttpContext): Observable<void> {
    return this.apiV1LogsDownloadRetrieve$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

}
