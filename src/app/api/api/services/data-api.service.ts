/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { apiV1DataFirmwareresultsRetrieve } from '../fn/data/api-v-1-data-firmwareresults-retrieve';
import { ApiV1DataFirmwareresultsRetrieve$Params } from '../fn/data/api-v-1-data-firmwareresults-retrieve';
import { apiV1DataTestcaseresultsRetrieve } from '../fn/data/api-v-1-data-testcaseresults-retrieve';
import { ApiV1DataTestcaseresultsRetrieve$Params } from '../fn/data/api-v-1-data-testcaseresults-retrieve';
import { apiV1DataTestresultsRetrieve } from '../fn/data/api-v-1-data-testresults-retrieve';
import { ApiV1DataTestresultsRetrieve$Params } from '../fn/data/api-v-1-data-testresults-retrieve';
import { apiV1DataTestresultsRetrieve2 } from '../fn/data/api-v-1-data-testresults-retrieve-2';
import { ApiV1DataTestresultsRetrieve2$Params } from '../fn/data/api-v-1-data-testresults-retrieve-2';
import { apiV1DataTeststatisticsRetrieve } from '../fn/data/api-v-1-data-teststatistics-retrieve';
import { ApiV1DataTeststatisticsRetrieve$Params } from '../fn/data/api-v-1-data-teststatistics-retrieve';

@Injectable({ providedIn: 'root' })
export class DataApiService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `apiV1DataFirmwareresultsRetrieve()` */
  static readonly ApiV1DataFirmwareresultsRetrievePath = '/api/v1/data/firmwareresults/{fw_version_name}';

  /**
   * API endpoint to retrieve test results for a firmware version
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiV1DataFirmwareresultsRetrieve()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1DataFirmwareresultsRetrieve$Response(params: ApiV1DataFirmwareresultsRetrieve$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return apiV1DataFirmwareresultsRetrieve(this.http, this.rootUrl, params, context);
  }

  /**
   * API endpoint to retrieve test results for a firmware version
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiV1DataFirmwareresultsRetrieve$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1DataFirmwareresultsRetrieve(params: ApiV1DataFirmwareresultsRetrieve$Params, context?: HttpContext): Observable<void> {
    return this.apiV1DataFirmwareresultsRetrieve$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

  /** Path part for operation `apiV1DataTestcaseresultsRetrieve()` */
  static readonly ApiV1DataTestcaseresultsRetrievePath = '/api/v1/data/testcaseresults/{testcase_id}/{major_version_name}';

  /**
   * api endpoint to retrieve test results for a test case
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiV1DataTestcaseresultsRetrieve()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1DataTestcaseresultsRetrieve$Response(params: ApiV1DataTestcaseresultsRetrieve$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return apiV1DataTestcaseresultsRetrieve(this.http, this.rootUrl, params, context);
  }

  /**
   * api endpoint to retrieve test results for a test case
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiV1DataTestcaseresultsRetrieve$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1DataTestcaseresultsRetrieve(params: ApiV1DataTestcaseresultsRetrieve$Params, context?: HttpContext): Observable<void> {
    return this.apiV1DataTestcaseresultsRetrieve$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

  /** Path part for operation `apiV1DataTestresultsRetrieve()` */
  static readonly ApiV1DataTestresultsRetrievePath = '/api/v1/data/testresults/{testset_name}';

  /**
   * API endpoint to retrieve test results for a testset and major version
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiV1DataTestresultsRetrieve()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1DataTestresultsRetrieve$Response(params: ApiV1DataTestresultsRetrieve$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return apiV1DataTestresultsRetrieve(this.http, this.rootUrl, params, context);
  }

  /**
   * API endpoint to retrieve test results for a testset and major version
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiV1DataTestresultsRetrieve$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1DataTestresultsRetrieve(params: ApiV1DataTestresultsRetrieve$Params, context?: HttpContext): Observable<void> {
    return this.apiV1DataTestresultsRetrieve$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

  /** Path part for operation `apiV1DataTestresultsRetrieve2()` */
  static readonly ApiV1DataTestresultsRetrieve2Path = '/api/v1/data/testresults/{testset_name}/{major_version_name}';

  /**
   * API endpoint to retrieve test results for a testset and major version
   *
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiV1DataTestresultsRetrieve2()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1DataTestresultsRetrieve2$Response(params: ApiV1DataTestresultsRetrieve2$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return apiV1DataTestresultsRetrieve2(this.http, this.rootUrl, params, context);
  }

  /**
   * API endpoint to retrieve test results for a testset and major version
   *
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiV1DataTestresultsRetrieve2$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1DataTestresultsRetrieve2(params: ApiV1DataTestresultsRetrieve2$Params, context?: HttpContext): Observable<void> {
    return this.apiV1DataTestresultsRetrieve2$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

  /** Path part for operation `apiV1DataTeststatisticsRetrieve()` */
  static readonly ApiV1DataTeststatisticsRetrievePath = '/api/v1/data/teststatistics';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `apiV1DataTeststatisticsRetrieve()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1DataTeststatisticsRetrieve$Response(params?: ApiV1DataTeststatisticsRetrieve$Params, context?: HttpContext): Observable<StrictHttpResponse<void>> {
    return apiV1DataTeststatisticsRetrieve(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `apiV1DataTeststatisticsRetrieve$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  apiV1DataTeststatisticsRetrieve(params?: ApiV1DataTeststatisticsRetrieve$Params, context?: HttpContext): Observable<void> {
    return this.apiV1DataTeststatisticsRetrieve$Response(params, context).pipe(
      map((r: StrictHttpResponse<void>): void => r.body)
    );
  }

}
